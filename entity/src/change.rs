//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "change")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub codified_date: Date,
    pub reason: Option<String>,
    pub url: String,
    pub status: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::change_commit::Entity")]
    ChangeCommit,
}

impl Related<super::change_commit::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChangeCommit.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
