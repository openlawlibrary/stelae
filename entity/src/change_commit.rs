//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "change_commit")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub change_id: i32,
    pub commit_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::change::Entity",
        from = "Column::ChangeId",
        to = "super::change::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Change,
    #[sea_orm(
        belongs_to = "super::commit::Entity",
        from = "Column::CommitId",
        to = "super::commit::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Commit,
}

impl Related<super::change::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Change.def()
    }
}

impl Related<super::commit::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Commit.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
